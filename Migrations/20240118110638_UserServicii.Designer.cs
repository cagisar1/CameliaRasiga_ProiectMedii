// <auto-generated />
using System;
using CameliaRasiga_ProiectMedii.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CameliaRasiga_ProiectMedii.Migrations
{
    [DbContext(typeof(CameliaRasiga_ProiectMediiContext))]
    [Migration("20240118110638_UserServicii")]
    partial class UserServicii
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CameliaRasiga_ProiectMedii.Models.Locatie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Localitate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Locatie");
                });

            modelBuilder.Entity("CameliaRasiga_ProiectMedii.Models.Medic", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Grad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocatieID")
                        .HasColumnType("int");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SpecialitateID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("LocatieID");

                    b.HasIndex("SpecialitateID");

                    b.ToTable("Medic");
                });

            modelBuilder.Entity("CameliaRasiga_ProiectMedii.Models.Serviciu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Denumire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MedicID")
                        .HasColumnType("int");

                    b.Property<decimal>("Pret")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SpecialitateID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MedicID");

                    b.HasIndex("SpecialitateID");

                    b.ToTable("Serviciu");
                });

            modelBuilder.Entity("CameliaRasiga_ProiectMedii.Models.Specialitate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Denumire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Specialitate");
                });

            modelBuilder.Entity("CameliaRasiga_ProiectMedii.Models.Utilizator", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Utilizator");
                });

            modelBuilder.Entity("CameliaRasiga_ProiectMedii.Models.UtilizatorServiciu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ServiciuID")
                        .HasColumnType("int");

                    b.Property<int?>("UtilizatorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ServiciuID");

                    b.HasIndex("UtilizatorID");

                    b.ToTable("UtilizatorServiciu");
                });

            modelBuilder.Entity("CameliaRasiga_ProiectMedii.Models.Medic", b =>
                {
                    b.HasOne("CameliaRasiga_ProiectMedii.Models.Locatie", "Locatie")
                        .WithMany("Medici")
                        .HasForeignKey("LocatieID");

                    b.HasOne("CameliaRasiga_ProiectMedii.Models.Specialitate", "Specialitate")
                        .WithMany("Medici")
                        .HasForeignKey("SpecialitateID");

                    b.Navigation("Locatie");

                    b.Navigation("Specialitate");
                });

            modelBuilder.Entity("CameliaRasiga_ProiectMedii.Models.Serviciu", b =>
                {
                    b.HasOne("CameliaRasiga_ProiectMedii.Models.Medic", "Medic")
                        .WithMany("Servicii")
                        .HasForeignKey("MedicID");

                    b.HasOne("CameliaRasiga_ProiectMedii.Models.Specialitate", "Specialitate")
                        .WithMany("Servicii")
                        .HasForeignKey("SpecialitateID");

                    b.Navigation("Medic");

                    b.Navigation("Specialitate");
                });

            modelBuilder.Entity("CameliaRasiga_ProiectMedii.Models.UtilizatorServiciu", b =>
                {
                    b.HasOne("CameliaRasiga_ProiectMedii.Models.Serviciu", "Serviciu")
                        .WithMany()
                        .HasForeignKey("ServiciuID");

                    b.HasOne("CameliaRasiga_ProiectMedii.Models.Utilizator", "Utilizator")
                        .WithMany("UtilizatorServicii")
                        .HasForeignKey("UtilizatorID");

                    b.Navigation("Serviciu");

                    b.Navigation("Utilizator");
                });

            modelBuilder.Entity("CameliaRasiga_ProiectMedii.Models.Locatie", b =>
                {
                    b.Navigation("Medici");
                });

            modelBuilder.Entity("CameliaRasiga_ProiectMedii.Models.Medic", b =>
                {
                    b.Navigation("Servicii");
                });

            modelBuilder.Entity("CameliaRasiga_ProiectMedii.Models.Specialitate", b =>
                {
                    b.Navigation("Medici");

                    b.Navigation("Servicii");
                });

            modelBuilder.Entity("CameliaRasiga_ProiectMedii.Models.Utilizator", b =>
                {
                    b.Navigation("UtilizatorServicii");
                });
#pragma warning restore 612, 618
        }
    }
}
